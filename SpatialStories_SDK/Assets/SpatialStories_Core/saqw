[1mdiff --git a/Core/Editor/Gaze_ConditionsEditor.cs b/Core/Editor/Gaze_ConditionsEditor.cs[m
[1mindex 2ce840f..f07d104 100644[m
[1m--- a/Core/Editor/Gaze_ConditionsEditor.cs[m
[1m+++ b/Core/Editor/Gaze_ConditionsEditor.cs[m
[36m@@ -17,12 +17,11 @@[m
 // <date>2014-06-01</date>[m
 using UnityEditor;[m
 using UnityEngine;[m
[31m-using UnityEditor.AnimatedValues;[m
 using System;[m
[31m-using System.Reflection;[m
 using System.Collections.Generic;[m
 using System.Linq;[m
 using UnityEngine.VR;[m
[32m+[m[32musing System.Linq;[m
 [m
 namespace Gaze[m
 {[m
[36m@@ -267,7 +266,7 @@[m [mnamespace Gaze[m
         {[m
             targetConditions = (Gaze_Conditions)target;[m
 [m
[31m-            logo = AssetDatabase.LoadAssetAtPath("Assets/Gaze SDK/Graphics/Logo/Logo.png", typeof(Texture2D)) as Texture2D;[m
[32m+[m[32m            logo = AssetDatabase.LoadAssetAtPath("../Resources/Logo/logo.png", typeof(Texture2D)) as Texture2D;[m
             logoRect = new Rect();[m
             logoRect.x = 332;[m
             logoRect.width = 67;[m
[36m@@ -338,12 +337,24 @@[m [mnamespace Gaze[m
                 interactiveObjectVisualColliders.Clear();[m
                 interactiveObjectVisualCollidersNames.Clear();[m
 [m
[31m-                // get all visual colliders in the scene ![m
[31m-                Collider[] cs = FindObjectsOfType(typeof(Collider)) as Collider[];[m
[32m+[m[32m                // Get all visual colliders in the scene ![m
[32m+[m[32m                List<Collider> cs = (FindObjectsOfType(typeof(Collider)) as Collider[]).ToList();[m
[32m+[m
[32m+[m[32m                // Clean all colliders that are not in an interactive object[m[41m [m
[32m+[m[32m                for(int i = cs.Count - 1; i >= 0; i--)[m
[32m+[m[32m                {[m
[32m+[m[32m                    if (cs[i].GetComponentInParent<Gaze_InteractiveObject>() == null)[m
[32m+[m[32m                        cs.RemoveAt(i);[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                // Sort the list[m
[32m+[m[32m                List<Collider> SortedList = cs.OrderBy(o => o.GetComponentInParent<Gaze_InteractiveObject>().name).ToList();[m
[32m+[m[32m                cs = SortedList;[m
[32m+[m
                 foreach (Collider c in cs)[m
                 {[m
                     interactiveObjectVisualColliders.Add(c);[m
[31m-                    if (c.transform.parent != null && c.gameObject.GetComponentInParent<Gaze_InteractiveObject>() != null)[m
[32m+[m[32m                    if (c.transform.parent != null)[m
                         interactiveObjectVisualCollidersNames.Add(c.gameObject.GetComponentInParent<Gaze_InteractiveObject>().name + "\t--> " + c.gameObject.name);[m
                     else[m
                         interactiveObjectVisualCollidersNames.Add(c.gameObject.name);[m
[1mdiff --git a/Core/Editor/Gaze_InteractiveObjectEditor.cs b/Core/Editor/Gaze_InteractiveObjectEditor.cs[m
[1mindex de67e9f..f854291 100644[m
[1m--- a/Core/Editor/Gaze_InteractiveObjectEditor.cs[m
[1m+++ b/Core/Editor/Gaze_InteractiveObjectEditor.cs[m
[36m@@ -135,6 +135,8 @@[m [mnamespace Gaze[m
             }[m
         }[m
 [m
[32m+[m
[32m+[m
         private void DisplayIsCatchable()[m
         {[m
             GUILayout.BeginHorizontal();[m
